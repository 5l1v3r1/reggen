{"name":"Reggen","tagline":"Go package to generate text from regex definitions","body":"Reg-gen\r\n=======\r\n\r\nThis package generates strings based on regular expressions\r\n\r\nUsage\r\n=====\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\r\n\t\"github.com/lucasjones/reggen\"\r\n)\r\n\r\nfunc main() {\r\n\t// generate a single string\r\n\tstr, err := reggen.Generate(\"^[a-z]{5,10}@[a-z]{5,10}\\\\.(com|net|org)$\", 10)\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\tfmt.Println(str)\r\n\r\n\t// create a reusable generator\r\n\tg, err := reggen.NewGenerator(\"[01]{5}\")\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\r\n\tfor i := 0; i < 5; i++ {\r\n\t\t// 10 is the maximum number of times star, range or plus should repeat\r\n\t\t// i.e. [0-9]+ will generate at most 10 characters if this is set to 10\r\n\t\tfmt.Println(g.Generate(10))\r\n\t}\r\n}\r\n```\r\n\r\n### Sample output:\r\n\r\n```\r\nbxnpubwc@kwrdbvjic.com\r\n11000\r\n01010\r\n01100\r\n01111\r\n01001\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}